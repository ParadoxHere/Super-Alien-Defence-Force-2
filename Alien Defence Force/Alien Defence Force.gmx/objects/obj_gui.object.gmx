<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 1;
moveOn = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveOn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);

draw_sprite(spr_gui, 0, 0, 0);

value = global.Health;
maxValue = global.MaxHealth;
percent = get_percent(value, maxValue) / 100;

Xpadding = 32;
Ypadding = 8

WIDTH = display_get_gui_width();
HEIGHT = display_get_gui_height();

draw_sprite_ext(spr_gui_healthbar_bottom, 0, Xpadding, Ypadding, 1, 1, 0, c_white, alpha);
if(global.Health &gt; 0) {
    draw_sprite_ext(spr_gui_healthbar_coloured, 0, Xpadding, Ypadding, percent, 1, 0, c_white, alpha);
}

draw_sprite_ext(spr_gui_healthbar, 0, Xpadding, Ypadding, 1, 1, 0, c_white, alpha);

draw_set_font(fnt_gui_12);

draw_sprite(spr_coin, 0, Xpadding, Ypadding * 6);
draw_text(Xpadding * 2, Ypadding * 6.5, "Money: $" +  string(global.money));

draw_sprite(spr_coin, 0, Xpadding, Ypadding * 6);
draw_text(Xpadding * 2, Ypadding * 9.5, "Score: " +  string(global.Score));

ammoPadding = 3;

draw_set_halign(fa_right);
draw_set_valign(fa_bottom);
draw_set_colour(c_black);
draw_sprite(spr_gui_bottom_right, 0, WIDTH, HEIGHT);
draw_text(WIDTH - ammoPadding, HEIGHT - ammoPadding, "Ammo: " + string(global.weaponArray[global.currentWeapon, 9]) + "/" + string(global.weaponArray[global.currentWeapon, 8]));
draw_sprite_ext(global.weaponArray[global.currentWeapon, 1], 0, WIDTH - 100, HEIGHT - 43, 2, 2, 0, c_white, alpha);

// Reminder
if(global.reminder == true) {
    if(global.weaponArray[0, 8] &lt;= 0) {
        draw_set_halign(fa_center);
        draw_set_valign(fa_middle);
        draw_set_colour(c_red);
        draw_set_font(fnt_gui_48);
        draw_text(WIDTH / 2, HEIGHT / 2, "Out of ammo!");
        draw_set_font(fnt_gui_12);
        draw_text(WIDTH / 2, HEIGHT / 2 + 64, "Press 'Esc' for the shop menu.");
    }
}

// Unlocked?
if(!global.weaponArray[global.currentWeapon, 10]) {
    draw_sprite(spr_lock, 0, WIDTH - 120, HEIGHT - 65);
}

// Wave Complete
if(global.wave_complete) {
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_colour(c_white);
    draw_set_font(fnt_gui_36);
    draw_text(WIDTH / 2, HEIGHT / 2, "WAVE " + string(global.wave) + " COMPLETE!");
    draw_set_font(fnt_gui_12);
    draw_text(WIDTH / 2, HEIGHT / 2 + 64, "Next wave in: " + string(ceil(obj_enemy_spawn.alarm[1] / seconds(1))));
}

draw_set_defaults();

if(global.Health &lt;= 0) {
    gameover();    
}

draw_set_defaults();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
